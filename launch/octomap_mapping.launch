<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  

	-0.8 to -0.5

-->

<launch>
	<arg name="rviz" default="true" />
	<arg name="path" />
	<arg name="z_min" default="-3.0" />
	<arg name="z_max" default="-1.5"  />


	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server" args="$(arg path)" >
		<param name="resolution" value="0.05" />
		
		<param name="occupancy_min_z" value="$(arg z_min)"/>
		<param name="occupancy_max_z" value="$(arg z_max)" />

		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="odom_combined" />
			
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="5.0" />
			
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/os_node/points" />
		<!-- <remap from="/projected_map" to="map" /> -->
	</node>

	<group if="$(arg rviz)">
    	<node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find 3D_Slam_tools)/rviz/grid_checker.rviz" />
  	</group>

</launch>
